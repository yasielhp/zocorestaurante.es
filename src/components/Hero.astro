---
import {
  getLangFromUrl,
  useTranslatedPath,
  useTranslations,
} from '../i18n/utils';
import Button from './Button.astro';
import Mouse from './icons/mouse.astro';
import Start from './icons/start.astro';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const translatePath = useTranslatedPath(lang);
---

<section id="hero" class="flex h-dvh flex-col items-center justify-center px-4">
  <div class="z-20 flex flex-col items-center justify-center pt-48">
    <img
      id="logo"
      src="/logo.webp"
      alt="Zoco Restaurant"
      class="pointer-events-none object-contain select-none md:mb-8"
    />
    <p
      id="hero-title"
      class="font-playfair mb-5 max-w-3xs text-center text-3xl leading-9 font-bold md:max-w-96 md:text-5xl md:leading-14"
    >
      {t('hero.title')}
    </p>
    <div
      id="hero-buttons"
      class="flex w-full flex-col gap-4 md:max-w-96 md:flex-row"
    >
      <Button
        style="primary"
        text={t('hero.btnLeft')}
        class="w-full"
        href={translatePath('/reserve')}
      />
      <Button
        style="secondary"
        text={t('hero.btnRight')}
        class="w-full"
        href={translatePath('/menu')}
      />
    </div>
    <div
      id="hero-reviews"
      class="tex-sm text-ivory-sand mt-9 flex gap-2 font-normal md:mt-5 md:text-base"
    >
      <div class="text-warm-gold flex">
        {Array.from({ length: 5 }, (_, i) => <Start key={i} />)}
      </div>
      <p>4.8/5 •</p>
      <p>{t('hero.reviews')}</p>
    </div>
    <div
      id="hero-mouse"
      class="text-warm-gold flex w-full items-end justify-center pt-20 md:pt-28"
    >
      <Mouse />
    </div>
  </div>
  <div id="hero-arco-container" class="absolute top-0 h-dvh w-full">
    <img
      id="hero-arco"
      src="/img/hero-arco.webp"
      class="h-full w-full object-cover"
      alt="Hero Arco"
    />
  </div>
</section>

<style>
  #hero-arco-container {
    transform-origin: center center;
  }

  #hero-arco-container::before {
    content: '';
    position: absolute;
    inset: 0;
    background: linear-gradient(
      to bottom,
      #1a1a1a 0%,
      rgba(26, 26, 26, 0.8) 15%,
      transparent 40%,
      transparent 60%,
      rgba(26, 26, 26, 0.8) 85%,
      #1a1a1a 100%
    );
    z-index: 1;
  }
</style>

<script>
  import { gsap } from 'gsap';
  import { ScrollTrigger } from 'gsap/ScrollTrigger';

  gsap.registerPlugin(ScrollTrigger);

  document.addEventListener('DOMContentLoaded', function () {
    const heroSection = document.getElementById('hero');
    const logo = document.getElementById('logo');
    const heroTitle = document.getElementById('hero-title');
    const heroButtons = document.getElementById('hero-buttons');
    const heroReviews = document.getElementById('hero-reviews');
    const heroMouse = document.getElementById('hero-mouse');

    // Timeline principal con pin
    const tl = gsap.timeline({
      scrollTrigger: {
        trigger: heroSection,
        start: 'top top',
        end: '+=150%', // Extiende la duración del pin
        scrub: 1,
        pin: true, // Mantiene el hero fijo
        anticipatePin: 1,
      },
    });

    // Animación del arco (zoom)
    const heroArcoContainer = document.getElementById('hero-arco-container');
    if (heroArcoContainer) {
      tl.fromTo(
        heroArcoContainer,
        {
          scale: 1,
          transformOrigin: 'center center',
        },
        {
          scale: 3,
          duration: 1,
          ease: 'none',
        },
        0
      );
    }

    // Animaciones de elementos de contenido (fade out con stagger)
    const contentElements = [
      logo,
      heroTitle,
      heroButtons,
      heroReviews,
      heroMouse,
    ].filter(Boolean);

    contentElements.forEach((element, index) => {
      if (element) {
        tl.to(
          element,
          {
            opacity: 0,
            y: -50,
            duration: 0.3,
            ease: 'power2.out',
          },
          index * 0.1 // Stagger de 0.1s entre cada elemento
        );
      }
    });
  });
</script>
